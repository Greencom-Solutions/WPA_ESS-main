﻿@model Latest_Staff_Portal.ViewModel.ApprovedPurchaseRequisition

@{
    ViewBag.Title = "ApprovedPurchaseRequisitionDocument";
    Layout = "~/Views/Shared/Sitemaster.cshtml";
}
<style>
    thead {
        background-color: black;
        color: white;
    }

    hr {
        margin: 4px;
    }

    .BtnPadding {
        padding: 7px;
        font-size: 12px;
    }
</style>
<div class="page-header">
    <div class="row">
        <div class="col-sm-12">
            <ul class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="#" onclick="ApprovedPurchaseRequisitionLink();">Accepted Purchase Requisitions </a>
                </li>
                <li class="breadcrumb-item active">Accepted Purchase Requisition Details(@Model.No)</li>
            </ul>
        </div>
    </div>
</div>
<hr />
<br />

<div class="card">
    <div class="card-body">
        <div class="text-center mt-5"><h4>Approved Purchase Requisition(@Model.No)</h4></div><br />
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Date ", new { @class = "control-label col-md-12" })
                    @Html.TextBoxFor(m => m.DocumentDate, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Product Requisition Group ", new { @class = "control-label col-md-12" })

                    @Html.TextBoxFor(m => m.RequisitionProductGroup, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Geographical Location", new { @class = "control-label col-md-12" })
                    @Html.TextBoxFor(m => m.LocationName, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Administrative unit ", new { @class = "control-label col-md-12" })
                    @Html.TextBoxFor(m => m.AdminUnitName, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("PP Planning Category", new { @class = "control-label col-md-12" })
                    @Html.TextBoxFor(m => m.PPPlanningCategory, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })
                </div>
            </div>
            @{
                if (Model.PurchaserCode2 != "")
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Assigned Supply Chain Officer", new { @class = "control-label col-md-12" })
                            @Html.TextBoxFor(m => m.AssignedOfficer, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })
                        </div>
                    </div>


                }
                else
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            <button style="background: #162f25; color:whitesmoke; border-radius:10px" onclick="GetPurchasers();">
                                <i class="fa fa-user-plus" aria-hidden="true"></i> Assign Supply Chain Officer
                            </button>

                        </div>
                    </div>
                }
            }
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Label("Description", new { @class = "control-label col-md-12" })
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @readonly = "readonly", style = "background-color:#dedebd" })

                </div>
            </div>
        </div>
        <hr style="border:1px solid black" />
        <b>Purchase Lines</b>
        <hr />
        <div id="divLines"></div>
        <hr style="border:1px solid black" />

    </div>

</div>

<!-- Modal for selecting date range -->
<div class="modal fade" id="assignPurchaserModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content bg-white">
            <div class="modal-header">
                <h4 class="modal-title">Select Supply chain Officer</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="purchasers">Purchaser:</label>
                    <select id="purchasers" class="form-control">
                        <option value="">-- Select Officer --</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="AssignOfficer();">Assign & Notify Officer</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        LoadApprovedPRNLine(`@Model.No`, `@Model.Status`);
        var status = `@Model.Status`;
 });

	var LoadApprovedPRNLine = function (DocNo, Status) {


        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            datatype: "json",
            contentType: "application/json; charset = utf-8",
            processData: false,
            data: JSON.stringify({ DocNo: DocNo, Status: Status }),
			url: "/Purchase/PurchaseDocumentLines",
            success: function (data) {
                $("#divLines").html(data);
                HideProgress();
                GetDocumentAttachments();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };
    function consolidatePrn(checkbox) {
        var divconsolidate = document.getElementById("divconsolidate");
        if (checkbox.checked) {
            divconsolidate.style.display = "block";
        } else {
            divconsolidate.style.display = "none";
        }
    }

    function SendDocForApproval(PurchaseRequisitionNo) {
        swal.fire({
            title: 'Are you sure?',
            text: "You want to send this document for approval?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: `/Home/SendDocForApproval?DocumentNo=${PurchaseRequisitionNo}`,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    beforeSend: function () {
                        ShowProgressing();
                    },
                    success: function (status) {
                        HideProgressing();
                        if (status == "success") {
                            swal.fire('Success!', 'Document Sent Successfully for Approval', 'success', true);
                            window.location.href = '/Home/ApprovedPurchaseRequisition';
                        } else {
                            swal.fire('Error!', status, 'error', true);
                        }
                    },
                    error: function () {
                        HideProgressing();
                        swal.fire('Error!', 'An error occurred while sending the document for approval', 'error', true);
                    }
                });
            }
        });
	}

	function GetPurchasers() {

		var purchaserDropdown = document.getElementById('purchasers');
		ShowProgress();

    if (purchaserDropdown) {
        $.ajax({
            url: '@Url.Action("GetPurchasers", "Purchase")',
            type: 'GET',
            success: function(response) {
                purchaserDropdown.innerHTML = '<option value="">-- Select Purchaser --</option>';
                if (response.Success && response.ListOfPurchasers.length > 0) {
                    $.each(response.ListOfPurchasers, function(index, item) {
                        var option = document.createElement('option');
                        option.value = item.Value;
                        option.text = item.Text;
                        purchaserDropdown.add(option);
					});
					HideProgress();
					$('#assignPurchaserModal').modal('show');

                } else {
                    var option = document.createElement('option');
                    option.text = 'No Purchaser found';
                    option.disabled = true;
                    purchaserDropdown.add(option);
                }
            },
            error: function(xhr, status, error) {
                console.error('Error occurred: ' + error);
            }
        });
    } else {
        purchaserDropdown.innerHTML = '<option value="">-- Select Purchaser --</option>';
    }
}

	var AssignOfficer = function () {
		var docNo = '@Model.No';
		var purchaser = $('#purchasers').val();

		ShowProgress();

		$.ajax({
			async: true,
			type: "POST",
			dataType: "json",
			data: JSON.stringify({
				docNo: docNo,
				purchaserNumber: purchaser,

			}),
			contentType: "application/json; charset=utf-8",
			processData: false,
			url: '/Purchase/AssignProcurentOfficer',
			success: function (data) {
				HideProgress();
				if (data.success === true) {
					Swal.fire({
						title: 'Officer Notified',
						text: 'The officer has been successfully notified.',
						icon: 'success',
						confirmButtonText: 'OK'
					}).then(() => {
						window.location = "/Purchase/ApprovedPurchaseRequisitionDocument?DocNo=" + docNo;
					});
					//window.location = "/Purchase/ApprovedPurchaseRequisitionDocument?DocNo=" + docNo;

				} else {
					Swal.fire('Error', data.message, 'error');
				}
			},
			error: function (err) {
				HideProgress();
				Swal.fire('Warning', err.responseText, 'warning');
			}
		});
	};

	var NotifyOfficer = function (officerNo) {
		alert(officerNo);

    ShowProgress();

    $.ajax({
        async: true,
        type: "POST",
        dataType: "json",
        data: JSON.stringify({
			officerNumber: officerNo
        }),
        contentType: "application/json; charset=utf-8",
        processData: false,
        url: '/Purchase/NotifyOfficer',
        success: function (data) {
            HideProgress();
            if (data.success === true) {
                Swal.fire({
                    title: 'Officer Notified',
                    text: 'The officer has been successfully notified.',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location = "/Purchase/ApprovedPurchaseRequisitionDocument?DocNo=" + docNo;
                });
            } else {
                Swal.fire('Error', data.message, 'error');
            }
        },
        error: function (err) {
            HideProgress();
            Swal.fire('Warning', err.responseText, 'warning');
        }
    });
};

</script>
