@model Latest_Staff_Portal.ViewModel.MonthlyWorkTicketCard

@{
    ViewBag.Title = "WorkTicketDocumentView";
    Layout = "~/Views/Shared/Sitemaster.cshtml";
}

<style>
    thead {
        background-color: black;
        color: white;
    }

    .selectedTableRow {
        background-color: #74788d;
        color: white;
    }

    .BtnPadding {
        padding: 7px;
        font-size: 12px;
    }
</style>
<div class="page-header">
    <div class="row">
        <div class="col-sm-12">
            <ul class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="#" onclick="WorkTicketListLink();">Work Ticket List</a>
                </li>
                <li class="breadcrumb-item active">Work Ticket Document (@Model.Daily_Work_Ticket)</li>
            </ul>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h4>Work Ticket Document(@Model.Daily_Work_Ticket)</h4>
        <div style="text-align: right">
            @{

                if (Model.Status == "Open")
                {
                    <div>
                        <input type="button" class="btn btn-primary action-buttons" value="Send (@Model.Daily_Work_Ticket) For Approval" onclick="SendDocForApproval('@Model.Daily_Work_Ticket');" />
                    </div>
                }
            }
        </div>
    </div>
    <div class="card-body">

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Daily_Work_Ticket, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Daily_Work_Ticket, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Daily_Work_Ticket, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Month_Date, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Month_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Month_Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Month_Name, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Month_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Month_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket_No, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Ticket_No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Ticket_No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Previous_Work_Ticket_No, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Previous_Work_Ticket_No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Previous_Work_Ticket_No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vehicle_Registration_No, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Vehicle_Registration_No, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Vehicle_Registration_No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Closed_by, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Closed_by, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Closed_by, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Global_Dimension_1_Code, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Global_Dimension_1_Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Global_Dimension_1_Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Date_Closed, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Date_Closed, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Date_Closed, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Created_By, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Created_By, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Created_By, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Date_Created, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Date_Created, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Date_Created, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized_By, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Authorized_By, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Authorized_By, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized_By_Name, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Authorized_By_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Authorized_By_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Time_Created, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Time_Created, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Time_Created, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Fuel_Carried_Forward, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Fuel_Carried_Forward, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Fuel_Carried_Forward, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Fuel_Drawn_Ltrs, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Fuel_Drawn_Ltrs, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Fuel_Drawn_Ltrs, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Kilometers, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Kilometers, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Kilometers, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Km_x0027_s_Covered, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Km_x0027_s_Covered, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Km_x0027_s_Covered, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Miles_Per_Litre_Fuel, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Miles_Per_Litre_Fuel, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Miles_Per_Litre_Fuel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Miles_Per_Ltr_Oil, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Miles_Per_Ltr_Oil, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Miles_Per_Ltr_Oil, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total_Oil_Drawn_Ltrs, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total_Oil_Drawn_Ltrs, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Total_Oil_Drawn_Ltrs, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Defect, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Defect, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Defect, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Defect_Date, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Defect_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Defect_Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Action_Taken_Reported, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Action_Taken_Reported, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "background-color: #f2f2f2;" } })
                    @Html.ValidationMessageFor(model => model.Action_Taken_Reported, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div id="divDepositLines">
            <hr style="border:1px solid black" />
            <b>Work Ticket Lines</b>
            <hr />
            <div id="divLines"></div>
        </div>
    </div>
</div>


@*//////////////////////Modal////////////////////////////*@
<div id="myModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mt-0" id="myModalLabel"><label id="labelF"></label></h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="~/assets/js/ShowProgression.js"></script>
<script src="~/assets/js/pdfobject.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
    LoadWorkTicketLines(`@Model.Daily_Work_Ticket`);

    $('.select2').select2();
});

    var LoadWorkTicketLines = function (DocNo) {
        var status = '@Model.Status';
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            dataType: "html",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                DocNo: DocNo,

            }),
            url: "/Fleet/WorkTicketLinesPartialView",
            success: function (data) {
                $("#divLines").html(data);
                HideProgress();
                
            },
            error: function () {
                HideProgress();
                
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };


 

    var AddWorkTicketLine = function () {
        var docNo = '@Model.Daily_Work_Ticket';
        alert(docNo)

        $("#labelF").text("Add Travelling Staff");
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            dataType: "html",
            url: '/Fleet/NewWorkTicketLine',
            data: {
                docNo: docNo,

            },
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err.responseText, 'warning');
            }
        });
    };

    function SubmitWorkTicketLine() {
        var isValid = true;
         var docNo = '@Model.Daily_Work_Ticket';
        var Employee_No = $("#Employee_No").val();


        if (!docNo) {
            Swal.fire('Warning', 'Document No field is required.', 'warning');
            isValid = false;
        }

        if (!Employee_No) {
            Swal.fire('Warning', 'Please select a Employee.', 'warning');
            isValid = false;
        }



        // Exit if validation fails
        if (!isValid) {
            return;
        }

        // Prepare data object
        var data = {
            Req_No: docNo,
            Employee_No: Employee_No,

        };
        // Show progress indicator
        ShowProgress();

        // Send data via AJAX
        $.ajax({
            type: "POST",
            url: "/Fleet/SubmitWorkTicketLine",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                HideProgress();
                if (data.success) {
                    var form = $('<form>', {
                        action: '/Fleet/WorkTicketDocumentView',
                        method: 'POST'
                    }).append($('<input>', {
                        type: 'hidden',
                        name: 'DocNo',
                        value: data.message
                    }));
                    form.appendTo('body').submit();
                    Swal.fire('Success', 'Transport requisition line submitted successfully.', 'success');
                } else {
                    Swal.fire('Warning', data.message, 'warning');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Error', 'An error occurred while submitting the request.', 'error');
            }
        });
    }


    function WorkTicketListLink() {
        window.location.href ="/Fleet/WorkTicketList"
    }


</script>

